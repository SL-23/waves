{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephanielau/Projects/waves/client/src/Components/User/Cart.js\";\nimport React, { Component } from 'react';\nimport UserLayout from '../../hoc/UserLayout';\nimport ProductBlock from '../Utils/User/ProductBlock';\nimport Paypal from '../Utils/Paypal';\nimport { connect } from 'react-redux';\nimport { getCartItems, removeCartItem, onSuccessBuy } from '../../actions/user_action';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport faFrown from '@fortawesome/fontawesome-free-solid/faFrown';\nimport faSmile from '@fortawesome/fontawesome-free-solid/faSmile';\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      total: 0,\n      showTotal: false,\n      showSuccess: false\n    };\n\n    this.calculateTotal = cartDetail => {\n      let total = 0;\n      cartDetail.forEach(item => {\n        total += parseInt(item.price, 10) * item.quantity;\n      });\n      this.setState({\n        total,\n        showTotal: true\n      });\n    };\n\n    this.removeFromCart = id => {\n      this.props.dispatch(removeCartItem(id)).then(() => {\n        if (this.props.user.cartDetail.length <= 0) {\n          this.setState({\n            showTotal: false\n          });\n        } else {\n          this.calculateTotal(this.props.user.cartDetail);\n        }\n      });\n    };\n\n    this.showNoItemMessage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart_no_item\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFrown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this), \"You have no item\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this);\n\n    this.transactionError = data => {\n      console.log(data);\n    };\n\n    this.transactionCancel = data => {\n      console.log(data);\n    };\n\n    this.transactionSuccess = data => {\n      console.log(data);\n      this.props.dispatch(onSuccessBuy({\n        cartDetail: this.props.user.cartDetail,\n        paymentData: data.paymentData\n      })).then(() => {\n        if (this.props.user.SuccessBuy) {\n          this.setState({\n            showTotal: false,\n            showSuccess: true\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    let cartItem = [];\n    let user = this.props.user;\n\n    if (user.userData.cart) {\n      if (user.userData.cart.length > 0) {\n        user.userData.cart.forEach(item => {\n          cartItem.push(item.id);\n        });\n        this.props.dispatch(getCartItems(cartItem, user.userData.cart)).then(() => {\n          if (this.props.user.cartDetail.length > 0) {\n            this.calculateTotal(this.props.user.cartDetail);\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(UserLayout, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProductBlock, {\n            products: this.props.user,\n            type: \"cart\",\n            removeItem: id => this.removeFromCart(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 12\n        }, this), this.state.showTotal ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_cart_sum\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Total amount:  $\", this.state.total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this) : this.state.showSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart_success\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSmile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Thank you\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"You order is now complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this) : this.showNoItemMessage(), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.showTotal ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paypal_button_container\",\n            children: /*#__PURE__*/_jsxDEV(Paypal, {\n              toPay: this.state.total,\n              transactionError: data => this.transactionError(data),\n              transactionCancel: data => this.transactionCancel(data),\n              onSuccess: data => this.transactionSuccess(data)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(Cart);","map":{"version":3,"sources":["/Users/stephanielau/Projects/waves/client/src/Components/User/Cart.js"],"names":["React","Component","UserLayout","ProductBlock","Paypal","connect","getCartItems","removeCartItem","onSuccessBuy","FontAwesomeIcon","faFrown","faSmile","Cart","state","loading","total","showTotal","showSuccess","calculateTotal","cartDetail","forEach","item","parseInt","price","quantity","setState","removeFromCart","id","props","dispatch","then","user","length","showNoItemMessage","transactionError","data","console","log","transactionCancel","transactionSuccess","paymentData","SuccessBuy","componentDidMount","cartItem","userData","cart","push","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport UserLayout from '../../hoc/UserLayout';\nimport ProductBlock from '../Utils/User/ProductBlock';\nimport Paypal from '../Utils/Paypal';\n\nimport { connect } from 'react-redux';\nimport { getCartItems, removeCartItem, onSuccessBuy } from '../../actions/user_action';\n\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport faFrown from '@fortawesome/fontawesome-free-solid/faFrown';\nimport faSmile from '@fortawesome/fontawesome-free-solid/faSmile';\n\nclass Cart extends Component {\n\n\tstate = {\n\t\tloading: true,\n\t\ttotal: 0,\n\t\tshowTotal: false,\n\t\tshowSuccess: false\n\t}\n\n\tcalculateTotal = (cartDetail) => {\n\t\tlet total = 0;\n\t\tcartDetail.forEach(item => {\n\t\t\ttotal += parseInt(item.price, 10) * item.quantity;\n\t\t})\n\n\t\tthis.setState({\n\t\t\ttotal,\n\t\t\tshowTotal: true\n\t\t})\n\t}\n  \t\n  \tcomponentDidMount() {\n  \t\tlet cartItem = [];\n  \t\tlet user = this.props.user;\n\n  \t\tif(user.userData.cart) \n  \t\t{\n  \t\t\tif(user.userData.cart.length > 0)\n  \t\t\t{\n  \t\t\t\tuser.userData.cart.forEach(item => {\n  \t\t\t\t\tcartItem.push(item.id)\n  \t\t\t\t});\n\n  \t\t\t\tthis.props.dispatch(getCartItems(cartItem, user.userData.cart))\n  \t\t\t\t.then(() => {\n  \t\t\t\t\tif(this.props.user.cartDetail.length > 0)\n  \t\t\t\t\t{\n  \t\t\t\t\t\tthis.calculateTotal(this.props.user.cartDetail);\n  \t\t\t\t\t}\n  \t\t\t\t})\n  \t\t\t\t\n  \t\t\t}\n  \t\t}\n\n\n\n  \t}\n\n  \tremoveFromCart = (id) => {\n  \t\tthis.props.dispatch(removeCartItem(id))\n  \t\t\t.then(() => {\n  \t\t\t\tif(this.props.user.cartDetail.length <= 0)\n  \t\t\t\t{\n  \t\t\t\t\tthis.setState({\n  \t\t\t\t\t\tshowTotal: false\n  \t\t\t\t\t})\n  \t\t\t\t} else {\n  \t\t\t\t\tthis.calculateTotal(this.props.user.cartDetail)\n  \t\t\t\t}\n  \t\t\t})\n  \t}\n\n  \tshowNoItemMessage = () => (\n  \t\t<div className='cart_no_item'>\n  \t\t\t<FontAwesomeIcon icon={faFrown}/>\n  \t\t\tYou have no item\n  \t\t</div>\n  \t)\n\n  \ttransactionError = (data) => {\n      console.log(data);\n  \t}\n\n\n  \ttransactionCancel = (data) => {\n      console.log(data);\n  \t}\n\n  \ttransactionSuccess = (data) => {\n      console.log(data)\n      this.props.dispatch(onSuccessBuy({\n        cartDetail: this.props.user.cartDetail,\n        paymentData: data.paymentData\n      })).then(() => {\n        if(this.props.user.SuccessBuy) {\n          this.setState({\n            showTotal: false,\n            showSuccess: true\n          })\n        }\n      })\n  \t}\n  \t\n  \trender() {\n    \treturn (\n      \t\t<div>\n      \t\t\t<UserLayout>\n        \t\t\t<div>\n        \t\t\t\t<h1>My Cart</h1>\n        \t\t\t\t<ProductBlock \n        \t\t\t\t\tproducts={this.props.user}\n        \t\t\t\t\ttype='cart'\n        \t\t\t\t\tremoveItem={(id) => this.removeFromCart(id)}\n        \t\t\t\t/>\n        \t\t\t</div>\n        \t\t\t{\n        \t\t\t\tthis.state.showTotal ?\n        \t\t\t\t<div className='user_cart_sum'>\n        \t\t\t\t\t<div>\n        \t\t\t\t\t\tTotal amount:  ${this.state.total}\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t\t: \n        \t\t\t\t\tthis.state.showSuccess ?\n        \t\t\t\t\t\t<div className='cart_success'>\n        \t\t\t\t\t\t\t<FontAwesomeIcon icon={faSmile}/>\n        \t\t\t\t\t\t\t<div>Thank you</div>\n        \t\t\t\t\t\t\t<div>You order is now complete</div>\n        \t\t\t\t\t\t</div>\t\n        \t\t\t\t\t: this.showNoItemMessage()\n        \t\t\t}\n\n        \t\t\t<div>\n        \t\t\t\t{\n        \t\t\t\t\tthis.state.showTotal ? \n        \t\t\t\t\t\t<div className='paypal_button_container'>\n        \t\t\t\t\t\t\t{<Paypal \n        \t\t\t\t\t\t\t   toPay={this.state.total}\n        \t\t\t\t\t\t\t   transactionError={(data) => this.transactionError(data)}\n        \t\t\t\t\t\t\t   transactionCancel={(data) => this.transactionCancel(data)}\n        \t\t\t\t\t\t\t   onSuccess={(data) => this.transactionSuccess(data)}\n        \t\t\t\t\t\t\t />}\n        \t\t\t\t\t\t</div>\n        \t\t\t\t\t: null\n        \t\t\t\t}\n        \t\t\t</div>\n        \t\t</UserLayout>\n        \t\t\n      \t\t</div>\n    \t)\n  \t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tuser: state.user\n\t}\n}\n\nexport default connect(mapStateToProps)(Cart);"]},"metadata":{},"sourceType":"module"}