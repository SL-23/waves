{"ast":null,"code":"import axios from 'axios';\nimport { USER_SERVER, PRODUCT_SERVER } from '../Components/Utils/Misc';\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER, ADD_TO_CART_USER, GET_CART_ITEM_USER, REMOVE_CART_ITEM_USER, ON_SUCCESS_BUY_USER, UPDATE_INFO_USER } from './types';\nexport function loginUser(dataToSubmit) {\n  const request = axios.post(`${USER_SERVER}/login`, dataToSubmit).then(response => response.data);\n  return {\n    type: LOGIN_USER,\n    payload: request\n  };\n}\nexport function registerUser(dataToSubmit) {\n  const request = axios.post(`${USER_SERVER}/register`, dataToSubmit).then(response => response.data);\n  return {\n    type: REGISTER_USER,\n    payload: request\n  };\n}\nexport function auth() {\n  const request = axios.get(`${USER_SERVER}/auth`).then(response => response.data);\n  return {\n    type: AUTH_USER,\n    payload: request\n  };\n}\nexport function logoutUser() {\n  const request = axios.get(`${USER_SERVER}/logout`).then(response => response.data);\n  return {\n    type: LOGOUT_USER,\n    payload: request\n  };\n}\nexport function addToCartUser(id) {\n  const request = axios.post(`${USER_SERVER}/addToCart?productId=${id}`).then(response => response.data);\n  console.log('addToCart');\n  return {\n    type: ADD_TO_CART_USER,\n    payload: request\n  };\n}\nexport function getCartItems(cartItem, userCart) {\n  const request = axios.get(`${PRODUCT_SERVER}/article_by_id?id=${cartItem}&type=array`).then(response => {\n    userCart.forEach(item => {\n      response.data.forEach((k, i) => {\n        if (item.id === k._id) {\n          response.data[i].quantity = item.quantity;\n        }\n      });\n    });\n    console.log(response.data);\n    return response.data;\n  });\n  return {\n    type: GET_CART_ITEM_USER,\n    payload: request\n  };\n}\nexport function removeCartItem(id) {\n  const request = axios.get(`${USER_SERVER}/removeFromCart?_id=${id}`).then(response => {\n    response.data.cart.forEach(item => {\n      response.data.cartDetail.forEach((k, i) => {\n        if (item.id === k._id) {\n          response.data.cartDetail[i].quantity = item.quantity;\n        }\n      });\n    });\n    return response.data;\n  });\n  return {\n    type: REMOVE_CART_ITEM_USER,\n    payload: request\n  };\n}\nexport function onSuccessBuy(data) {\n  const request = axios.post(`${USER_SERVER}/successBuy`, data).then(response => response.data);\n  return {\n    type: ON_SUCCESS_BUY_USER,\n    payload: request\n  };\n}","map":{"version":3,"sources":["/Users/stephanielau/Projects/waves/client/src/actions/user_action.js"],"names":["axios","USER_SERVER","PRODUCT_SERVER","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART_USER","GET_CART_ITEM_USER","REMOVE_CART_ITEM_USER","ON_SUCCESS_BUY_USER","UPDATE_INFO_USER","loginUser","dataToSubmit","request","post","then","response","data","type","payload","registerUser","auth","get","logoutUser","addToCartUser","id","console","log","getCartItems","cartItem","userCart","forEach","item","k","i","_id","quantity","removeCartItem","cart","cartDetail","onSuccessBuy"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport { USER_SERVER, PRODUCT_SERVER } from '../Components/Utils/Misc';\nimport { LOGIN_USER, \n\t\tREGISTER_USER, \n\t\tAUTH_USER, \n\t\tLOGOUT_USER,\n\t\tADD_TO_CART_USER,\n\t\tGET_CART_ITEM_USER,\n\t\tREMOVE_CART_ITEM_USER,\n\t\tON_SUCCESS_BUY_USER,\n\t\tUPDATE_INFO_USER } from './types'\n\nexport function loginUser(dataToSubmit)\n{\n\tconst request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\n\t\t.then(response => response.data);\n\treturn {\n\t\ttype: LOGIN_USER,\n\t\tpayload: request\n\t}\n}\n\nexport function registerUser(dataToSubmit)\n{\n\tconst request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\n\t\t.then(response => response.data);\n\treturn {\n\t\ttype: REGISTER_USER,\n\t\tpayload: request\n\t}\n}\n\nexport function auth() \n{\n\tconst request = axios.get(`${USER_SERVER}/auth`)\n\t\t.then(response => response.data);\n\treturn {\n\t\ttype: AUTH_USER,\n\t\tpayload: request\n\t}\n}\n\nexport function logoutUser() \n{\n\tconst request = axios.get(`${USER_SERVER}/logout`)\n\t\t.then(response => response.data);\n\treturn {\n\t\ttype: LOGOUT_USER,\n\t\tpayload: request\n\t}\n}\n\nexport function addToCartUser(id)\n{\n\tconst request = axios.post(`${USER_SERVER}/addToCart?productId=${id}`)\n\t\t.then(response => response.data)\n\t\tconsole.log('addToCart');\n\treturn {\n\t\ttype: ADD_TO_CART_USER,\n\t\tpayload: request\n\t}\n}\n\nexport function getCartItems(cartItem, userCart) \n{\n\tconst request = axios.get(`${PRODUCT_SERVER}/article_by_id?id=${cartItem}&type=array`)\n\t\t.then(response => {\n\t\t\tuserCart.forEach(item => {\n\t\t\t\tresponse.data.forEach((k,i) => {\n\t\t\t\t\tif(item.id === k._id) {\n\t\t\t\t\t\tresponse.data[i].quantity = item.quantity;\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t})\n\t\t\tconsole.log(response.data);\n\t\t\treturn response.data;\n\t\t\t\n\t\t})\n\treturn {\n\t\ttype: GET_CART_ITEM_USER,\n\t\tpayload: request\n\t}\n}\n\nexport function removeCartItem(id)\n{\n\tconst request = axios.get(`${USER_SERVER}/removeFromCart?_id=${id}`)\n\t\t.then(response => {\n\t\t\tresponse.data.cart.forEach(item => {\n\t\t\t\tresponse.data.cartDetail.forEach((k,i) => {\n\t\t\t\t\tif(item.id === k._id)\n\t\t\t\t\t{\n\t\t\t\t\t\tresponse.data.cartDetail[i].quantity = item.quantity;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\treturn response.data;\n\t\t})\n\treturn {\n\t\ttype: REMOVE_CART_ITEM_USER,\n\t\tpayload: request\n\t}\n}\n\n\nexport function onSuccessBuy (data) {\n\tconst request = axios.post(`${USER_SERVER}/successBuy`, data)\n\t\t.then(response => response.data)\n\treturn {\n\t\ttype: ON_SUCCESS_BUY_USER,\n\t\tpayload: request\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}