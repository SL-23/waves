{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephanielau/Desktop/code/projects/waves/client/src/Components/User/Admin/AddProduct.js\";\nimport React, { Component } from 'react';\nimport UserLayout from '../../../hoc/UserLayout';\nimport FormField from '../../Utils/Form/FormField';\nimport { update, generateData, isFormValid, populateOptionFields, resetFields } from '../../Utils/Form/FormAction';\nimport FileUpload from '../../Utils/Form/FileUpload';\nimport { getBrands, getWoods, addOneProduct, clearProduct } from '../../../actions/products_action';\nimport { connect } from 'react-redux';\n\nclass AddProduct extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      formSuccess: false,\n      formData: {\n        name: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Prodcut name',\n            name: 'name_input',\n            type: 'text',\n            placeholder: 'Enter the name'\n          },\n          validation: {\n            required: true,\n            email: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showLabel: true\n        },\n        description: {\n          element: 'textarea',\n          value: '',\n          config: {\n            label: 'Prodcut description',\n            name: 'description_input',\n            type: 'text',\n            placeholder: 'Enter the description'\n          },\n          validation: {\n            required: true,\n            email: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: ''\n        },\n        price: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Prodcut price',\n            name: 'price_input',\n            type: 'number',\n            placeholder: 'Enter the price'\n          },\n          validation: {\n            required: true,\n            email: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showLabel: true\n        },\n        brand: {\n          element: 'select',\n          value: '',\n          config: {\n            label: 'Brand',\n            name: 'brand_input',\n            options: []\n          },\n          validation: {\n            required: true,\n            email: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showLabel: true\n        },\n        wood: {\n          element: 'select',\n          value: '',\n          config: {\n            label: 'Wood',\n            name: 'wood_input',\n            options: []\n          },\n          validation: {\n            required: true,\n            email: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showLabel: true\n        },\n        frets: {\n          element: 'select',\n          value: '',\n          config: {\n            label: 'Frets',\n            name: 'frets_input',\n            options: [{\n              key: 20,\n              value: 20\n            }, {\n              key: 21,\n              value: 21\n            }, {\n              key: 22,\n              value: 22\n            }, {\n              key: 24,\n              value: 24\n            }]\n          },\n          validation: {\n            required: true,\n            email: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showLabel: true\n        },\n        shipping: {\n          element: 'select',\n          value: '',\n          config: {\n            label: 'Shipping',\n            name: 'shipping_input',\n            options: [{\n              key: 'Yes',\n              value: true\n            }, {\n              key: 'No',\n              value: false\n            }]\n          },\n          validation: {\n            required: true,\n            email: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showLabel: true\n        },\n        available: {\n          element: 'select',\n          value: '',\n          config: {\n            label: 'Available',\n            name: 'available_input',\n            options: [{\n              key: 'Yes',\n              value: true\n            }, {\n              key: 'No',\n              value: false\n            }]\n          },\n          validation: {\n            required: true,\n            email: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showLabel: true\n        },\n        publish: {\n          element: 'select',\n          value: '',\n          config: {\n            label: 'Publish',\n            name: 'publish_input',\n            options: [{\n              key: 'Public',\n              value: true\n            }, {\n              key: 'Hidden',\n              value: false\n            }]\n          },\n          validation: {\n            required: true,\n            email: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showLabel: true\n        },\n        file: {\n          element: 'select',\n          value: '',\n          validation: {\n            required: true,\n            email: false\n          },\n          valid: true,\n          touched: false,\n          validationMessage: '',\n          showLabel: false\n        }\n      }\n    };\n\n    this.updateFields = newFormData => {\n      this.setState({\n        formData: newFormData\n      });\n    };\n\n    this.resetFieldsHandler = () => {\n      const newFormdata = resetFields(this.state.formData, 'products');\n      this.setState({\n        formData: newFormdata,\n        formSuccess: true\n      });\n      setTimeout(() => {\n        this.setState({\n          formData: newFormdata,\n          formSuccess: false\n        }, () => {\n          this.props.dispatch(clearProduct());\n        });\n      }, 3000);\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formData, 'products');\n      let formIsValid = isFormValid(this.state.formData, 'products');\n\n      if (formIsValid) {\n        this.props.dispatch(addOneProduct(dataToSubmit)).then(() => {\n          console.log(this.props.products);\n\n          if (this.props.products.newProduct.success) {\n            this.resetFieldsHandler();\n          } else {\n            this.setState({\n              formError: true\n            });\n          }\n        });\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n\n    this.updateForm = element => {\n      const newFormdata = update(element, this.state.formData, 'products');\n      this.setState({\n        formError: false,\n        formData: newFormdata\n      });\n    };\n\n    this.imagesHandler = e => {};\n  }\n\n  componentDidMount() {\n    const formData = this.state.formData;\n    this.props.dispatch(getBrands()).then(response => {\n      const newFormData = populateOptionFields(formData, this.props.products.brands, 'brand');\n      console.log(newFormData);\n      this.updateFields(newFormData);\n    });\n    this.props.dispatch(getWoods()).then(response => {\n      const newFormData = populateOptionFields(formData, this.props.products.woods, 'wood');\n      console.log(newFormData);\n      this.updateFields(newFormData);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(UserLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"AddProduct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: event => this.submitForm(event),\n          children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n            imagesHandler: e => this.imagesHandler(e),\n            reset: this.state.formSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            id: 'name',\n            formData: this.state.formData.name,\n            change: element => this.updateForm(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            id: 'description',\n            formData: this.state.formData.description,\n            change: element => this.updateForm(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            id: 'price',\n            formData: this.state.formData.price,\n            change: element => this.updateForm(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_devider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            id: 'brand',\n            formData: this.state.formData.brand,\n            change: element => this.updateForm(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            id: 'wood',\n            formData: this.state.formData.wood,\n            change: element => this.updateForm(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            id: 'frets',\n            formData: this.state.formData.frets,\n            change: element => this.updateForm(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            id: 'available',\n            formData: this.state.formData.available,\n            change: element => this.updateForm(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            id: 'shipping',\n            formData: this.state.formData.shipping,\n            change: element => this.updateForm(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_devider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            id: 'publish',\n            formData: this.state.formData.publish,\n            change: element => this.updateForm(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), this.state.formSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_success\",\n            children: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this) : null, this.state.formError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error_label\",\n            children: \"Please check your data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => this.submitForm(event),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nexport default connect(mapStateToProps)(AddProduct);","map":{"version":3,"sources":["/Users/stephanielau/Desktop/code/projects/waves/client/src/Components/User/Admin/AddProduct.js"],"names":["React","Component","UserLayout","FormField","update","generateData","isFormValid","populateOptionFields","resetFields","FileUpload","getBrands","getWoods","addOneProduct","clearProduct","connect","AddProduct","state","formError","formSuccess","formData","name","element","value","config","label","type","placeholder","validation","required","email","valid","touched","validationMessage","showLabel","description","price","brand","options","wood","frets","key","shipping","available","publish","file","updateFields","newFormData","setState","resetFieldsHandler","newFormdata","setTimeout","props","dispatch","submitForm","event","preventDefault","dataToSubmit","formIsValid","then","console","log","products","newProduct","success","updateForm","imagesHandler","e","componentDidMount","response","brands","woods","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport UserLayout from '../../../hoc/UserLayout';\n\nimport FormField from '../../Utils/Form/FormField';\nimport { update, generateData, isFormValid, populateOptionFields, resetFields } from '../../Utils/Form/FormAction';\nimport FileUpload from '../../Utils/Form/FileUpload';\nimport { getBrands, getWoods, addOneProduct, clearProduct } from '../../../actions/products_action';\n\nimport { connect } from 'react-redux';\n\n\nclass AddProduct extends Component {\n\n  state = {\n    formError: false,\n    formSuccess: false,\n    formData: {\n      name: {\n        element: 'input',\n        value: '',\n        config: {\n          label:'Prodcut name',\n          name: 'name_input',\n          type: 'text',\n          placeholder: 'Enter the name'\n        },\n        validation: {\n          required: true,\n          email: false\n        },\n        valid: false,\n        touched: false,\n        validationMessage:'',\n        showLabel: true\n      },\n      description: {\n        element: 'textarea',\n        value: '',\n        config: {\n          label:'Prodcut description',\n          name: 'description_input',\n          type: 'text',\n          placeholder: 'Enter the description'\n        },\n        validation: {\n          required: true,\n          email: false\n        },\n        valid: false,\n        touched: false,\n        validationMessage:''\n      },\n      price: {\n        element: 'input',\n        value: '',\n        config: {\n          label:'Prodcut price',\n          name: 'price_input',\n          type: 'number',\n          placeholder: 'Enter the price'\n        },\n        validation: {\n          required: true,\n          email: false\n        },\n        valid: false,\n        touched: false,\n        validationMessage:'',\n        showLabel: true\n      },\n      brand: {\n        element: 'select',\n        value: '',\n        config: {\n          label:'Brand',\n          name: 'brand_input',\n          options: []\n        },\n        validation: {\n          required: true,\n          email: false\n        },\n        valid: false,\n        touched: false,\n        validationMessage:'',\n        showLabel: true\n      },\n      wood: {\n        element: 'select',\n        value: '',\n        config: {\n          label:'Wood',\n          name: 'wood_input',\n          options: []\n        },\n        validation: {\n          required: true,\n          email: false\n        },\n        valid: false,\n        touched: false,\n        validationMessage:'',\n        showLabel: true\n      },\n      frets: {\n        element: 'select',\n        value: '',\n        config: {\n          label:'Frets',\n          name: 'frets_input',\n          options: [\n            {key: 20, value: 20},\n            {key: 21, value: 21},\n            {key: 22, value: 22},\n            {key: 24, value: 24},\n          ]\n        },\n        validation: {\n          required: true,\n          email: false\n        },\n        valid: false,\n        touched: false,\n        validationMessage:'',\n        showLabel: true\n      },\n      shipping: {\n        element: 'select',\n        value: '',\n        config: {\n          label:'Shipping',\n          name: 'shipping_input',\n          options: [\n            {key: 'Yes', value: true},\n            {key: 'No', value: false}\n          ]\n        },\n        validation: {\n          required: true,\n          email: false\n        },\n        valid: false,\n        touched: false,\n        validationMessage:'',\n        showLabel: true\n      },\n      available: {\n        element: 'select',\n        value: '',\n        config: {\n          label:'Available',\n          name: 'available_input',\n          options: [\n            {key: 'Yes', value: true},\n            {key: 'No', value: false}\n          ]\n        },\n        validation: {\n          required: true,\n          email: false\n        },\n        valid: false,\n        touched: false,\n        validationMessage:'',\n        showLabel: true\n      },\n      publish: {\n        element: 'select',\n        value: '',\n        config: {\n          label:'Publish',\n          name: 'publish_input',\n          options: [\n            {key: 'Public', value: true},\n            {key: 'Hidden', value: false}\n          ]\n        },\n        validation: {\n          required: true,\n          email: false\n        },\n        valid: false,\n        touched: false,\n        validationMessage:'',\n        showLabel: true\n      },\n      file: {\n        element: 'select',\n        value: '',\n        validation: {\n          required: true,\n          email: false\n        },\n        valid: true,\n        touched: false,\n        validationMessage:'',\n        showLabel: false\n      }\n\n    }\n  }\n\n  updateFields = (newFormData) => {\n    this.setState({\n      formData: newFormData\n    })\n  }\n\n  componentDidMount()\n  {\n    const formData = this.state.formData;\n\n    this.props.dispatch(getBrands()).then( response => {\n      const newFormData = populateOptionFields(formData, this.props.products.brands, 'brand');\n      console.log(newFormData);\n      this.updateFields(newFormData);\n    })\n\n    this.props.dispatch(getWoods()).then( response => {\n      const newFormData = populateOptionFields(formData, this.props.products.woods, 'wood');\n      console.log(newFormData);\n      this.updateFields(newFormData);\n    })\n  }\n\n  resetFieldsHandler = () => {\n    const newFormdata = resetFields(this.state.formData, 'products');\n    this.setState({\n      formData: newFormdata,\n      formSuccess: true\n    });\n    setTimeout(() => {\n      this.setState({\n      formData: newFormdata,\n      formSuccess: false\n    }, () => {\n      this.props.dispatch(clearProduct())\n    });\n    }, 3000);\n  }\n\n  submitForm = (event) => {\n    event.preventDefault();\n    let dataToSubmit = generateData(this.state.formData, 'products');\n\n    let formIsValid = isFormValid(this.state.formData, 'products');\n    if(formIsValid)\n    {\n      \n      this.props.dispatch(addOneProduct(dataToSubmit)).then(() => {\n        console.log(this.props.products);\n        if(this.props.products.newProduct.success) {\n          this.resetFieldsHandler();\n\n        }\n        else {\n          this.setState({formError: true})\n        }\n      })\n    \n    }\n    else {\n      this.setState({\n        formError: true\n      })\n    }\n  }\n\n  updateForm = (element) => {\n\n    const newFormdata = update(element, this.state.formData, 'products');\n    this.setState({\n      formError: false,\n      formData: newFormdata\n    })\n  }\n\n  imagesHandler = (e) => {\n\n  }\n\n  render() {\n    return (\n      \n        <UserLayout>\n          <div>\n            <h1>AddProduct</h1>\n            <form onSubmit={(event) => this.submitForm(event)} >\n              <FileUpload \n                imagesHandler={(e) => this.imagesHandler(e)}\n                reset={this.state.formSuccess}\n              />\n              <FormField \n                id={'name'}\n                formData={this.state.formData.name}\n                change={(element)=> this.updateForm(element)}\n              />\n              <FormField \n                id={'description'}\n                formData={this.state.formData.description}\n                change={(element)=> this.updateForm(element)}\n              />\n              <FormField \n                id={'price'}\n                formData={this.state.formData.price}\n                change={(element)=> this.updateForm(element)}\n              />\n              <div className='form_devider'/>\n              <FormField \n                id={'brand'}\n                formData={this.state.formData.brand}\n                change={(element)=> this.updateForm(element)}\n              />\n              <FormField \n                id={'wood'}\n                formData={this.state.formData.wood}\n                change={(element)=> this.updateForm(element)}\n              />\n              <FormField \n                id={'frets'}\n                formData={this.state.formData.frets}\n                change={(element)=> this.updateForm(element)}\n              />\n              <FormField \n                id={'available'}\n                formData={this.state.formData.available}\n                change={(element)=> this.updateForm(element)}\n              />\n              <FormField \n                id={'shipping'}\n                formData={this.state.formData.shipping}\n                change={(element)=> this.updateForm(element)}\n              />\n              <div className='form_devider'/>\n              <FormField \n                id={'publish'}\n                formData={this.state.formData.publish}\n                change={(element)=> this.updateForm(element)}\n              />\n              {\n                this.state.formSuccess ?\n                <div className='form_success'>\n                  Success\n                </div>\n                : null\n              }\n\n              {\n                this.state.formError ?\n                <div className='error_label'>\n                  Please check your data\n                </div>\n                : null\n              }\n              <button onClick={(event)=> this.submitForm(event)}>\n                Submit\n              </button>\n            </form>\n          </div>\n        </UserLayout>\n    \n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tproducts: state.products\n\t}\n}\n\nexport default connect(mapStateToProps)(AddProduct);"]},"metadata":{},"sourceType":"module"}