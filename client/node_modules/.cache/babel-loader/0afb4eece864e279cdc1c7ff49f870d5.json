{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_SERVER } from '../Components/Utils/Misc';\nimport { GET_PRODUCTS_BY_ARRIVAL, GET_PRODUCTS_BY_SELL, GET_BRANDS, GET_WOODS, GET_PRODUCTS_TO_SHOP, ADD_ONE_PRODUCT, CLEAR_PRODUCT, ADD_ONE_BRAND, ADD_ONE_WOOD, GET_PRODUCT_DETAILS, CLEAR_PRODUCT_DETAILS } from './types';\nexport function getProductsByArrival() {\n  const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=createdAt&order=desc&limit=4`).then(response => response.data);\n  return {\n    type: GET_PRODUCTS_BY_ARRIVAL,\n    payload: request\n  };\n}\nexport function getProductsBySell() {\n  const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=sold&order=desc&limit=4`).then(response => response.data);\n  return {\n    type: GET_PRODUCTS_BY_SELL,\n    payload: request\n  };\n} // CATEGORIES\n\nexport function getBrands() {\n  const request = axios.get(`${PRODUCT_SERVER}/brands`).then(response => response.data);\n  return {\n    type: GET_BRANDS,\n    payload: request\n  };\n}\nexport function getWoods() {\n  const request = axios.get(`${PRODUCT_SERVER}/woods`).then(response => response.data);\n  return {\n    type: GET_WOODS,\n    payload: request\n  };\n}\nexport function getProductsToShop(skip, limit, filters = [], previousState = []) {\n  const data = {\n    limit,\n    skip,\n    filters\n  };\n  const request = axios.post(`${PRODUCT_SERVER}/shop`, data).then(response => {\n    let newState = [...previousState, ...response.data.articles];\n    return {\n      size: response.data.size,\n      articles: newState\n    };\n  });\n  return {\n    type: GET_PRODUCTS_TO_SHOP,\n    payload: request\n  };\n}\nexport function addOneProduct(dataToSubmit) {\n  const request = axios.post(`${PRODUCT_SERVER}/article`, dataToSubmit).then(response => response.data);\n  return {\n    type: ADD_ONE_PRODUCT,\n    payload: request\n  };\n}\nexport function clearProduct() {\n  return {\n    type: CLEAR_PRODUCT,\n    payload: ''\n  };\n}\nexport function addOneBrand(dataToSubmit, existingBrands) {\n  const request = axios.post(`${PRODUCT_SERVER}/brand`, dataToSubmit).then(response => {\n    let brands = [...existingBrands, response.data.brands];\n    return {\n      success: response.data.success,\n      brands\n    };\n  });\n  console.log(request);\n  return {\n    type: ADD_ONE_BRAND,\n    payload: request\n  };\n}\nexport function addOneWood(dataToSubmit, existingWoods) {\n  const request = axios.post(`${PRODUCT_SERVER}/wood`, dataToSubmit).then(response => {\n    let woods = [...existingWoods, response.data.woods];\n    return {\n      success: response.data.success,\n      woods\n    };\n  });\n  return {\n    type: ADD_ONE_WOOD,\n    payload: request\n  };\n}\nexport function getProductDetails(id) {\n  const request = axios.get(`${PRODUCT_SERVER}/article_by_id?$(id)&type=single`).then(response => {\n    return response.data[0];\n  });\n  return {\n    type: GET_PRODUCT_DETAILS,\n    payload: request\n  };\n}\nexport function clearProductDetails() {\n  return {\n    type: CLEAR_PRODUCT_DETAILS,\n    payload: ''\n  };\n}","map":{"version":3,"sources":["/Users/stephanielau/Desktop/code/projects/waves/client/src/actions/products_action.js"],"names":["axios","PRODUCT_SERVER","GET_PRODUCTS_BY_ARRIVAL","GET_PRODUCTS_BY_SELL","GET_BRANDS","GET_WOODS","GET_PRODUCTS_TO_SHOP","ADD_ONE_PRODUCT","CLEAR_PRODUCT","ADD_ONE_BRAND","ADD_ONE_WOOD","GET_PRODUCT_DETAILS","CLEAR_PRODUCT_DETAILS","getProductsByArrival","request","get","then","response","data","type","payload","getProductsBySell","getBrands","getWoods","getProductsToShop","skip","limit","filters","previousState","post","newState","articles","size","addOneProduct","dataToSubmit","clearProduct","addOneBrand","existingBrands","brands","success","console","log","addOneWood","existingWoods","woods","getProductDetails","id","clearProductDetails"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport { PRODUCT_SERVER } from '../Components/Utils/Misc';\n\nimport { GET_PRODUCTS_BY_ARRIVAL, \n\t\tGET_PRODUCTS_BY_SELL, \n\t\tGET_BRANDS, \n\t\tGET_WOODS,\n\t\tGET_PRODUCTS_TO_SHOP, \n\t\tADD_ONE_PRODUCT, \n\t\tCLEAR_PRODUCT, \n\t\tADD_ONE_BRAND, \n\t\tADD_ONE_WOOD, \n\t\tGET_PRODUCT_DETAILS,\n\t\tCLEAR_PRODUCT_DETAILS  } from './types';\n\nexport function getProductsByArrival() {\n\tconst request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=createdAt&order=desc&limit=4`)\n\t.then(response => response.data);\n\treturn {\n\t\ttype: GET_PRODUCTS_BY_ARRIVAL,\n\t\tpayload: request\n\t}\n\n}\n\nexport function getProductsBySell() {\n\tconst request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=sold&order=desc&limit=4`)\n\t.then(response => response.data);\n\treturn {\n\t\ttype: GET_PRODUCTS_BY_SELL,\n\t\tpayload: request\n\t}\n}\n\n// CATEGORIES\n\n\n\nexport function getBrands() {\n\tconst request = axios.get(`${PRODUCT_SERVER}/brands`)\n\t.then(response => response.data);\n\treturn {\n\t\ttype: GET_BRANDS,\n\t\tpayload: request\n\t}\n\n\n}\n\nexport function getWoods() {\n\tconst request = axios.get(`${PRODUCT_SERVER}/woods`)\n\t.then(response => response.data);\n\treturn {\n\t\ttype: GET_WOODS,\n\t\tpayload: request\n\t}\n\n}\n\nexport function getProductsToShop(skip, limit, filters = [], previousState = []) {\n\tconst data = {\n\t\tlimit,\n\t\tskip,\n\t\tfilters\n\t}\n\n\tconst request = axios.post(`${PRODUCT_SERVER}/shop`, data)\n\t.then(response => {\n\n\t\tlet newState = [\n\t\t\t...previousState,\n\t\t\t...response.data.articles\n\t\t];\n\n\t\treturn {\n\t\t\tsize: response.data.size,\n\t\t\tarticles: newState\n\t\t}\n\t});\n\n\treturn {\n\t\ttype: GET_PRODUCTS_TO_SHOP,\n\t\tpayload:request\n\t}\n\n}\n\nexport function addOneProduct(dataToSubmit) {\n\t\n\tconst request = axios.post(`${PRODUCT_SERVER}/article`, dataToSubmit)\n\t\t.then(response => response.data);\n\treturn {\n\t\ttype: ADD_ONE_PRODUCT,\n\t\tpayload: request\n\t}\n}\n\nexport function clearProduct() {\n\treturn {\n\t\ttype: CLEAR_PRODUCT,\n\t\tpayload: ''\n\t}\n}\n\nexport function addOneBrand(dataToSubmit, existingBrands) {\n\tconst request = axios.post(`${PRODUCT_SERVER}/brand`, dataToSubmit)\n\t\t.then(response => {\n\t\t\tlet brands = [...existingBrands, response.data.brands];\n\t\t\treturn {\n\t\t\t\tsuccess: response.data.success,\n\t\t\t\tbrands\n\t\t\t}\n\t\t});\n\t\tconsole.log(request);\n\t\treturn {\n\t\t\ttype: ADD_ONE_BRAND,\n\t\t\tpayload: request\n\t\t}\n\t\t\n}\n\nexport function addOneWood(dataToSubmit, existingWoods) {\n\tconst request = axios.post(`${PRODUCT_SERVER}/wood`, dataToSubmit)\n\t\t.then(response => {\n\t\t\tlet woods = [...existingWoods, response.data.woods];\n\t\t\treturn {\n\t\t\t\tsuccess: response.data.success,\n\t\t\t\twoods\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\ttype: ADD_ONE_WOOD,\n\t\t\tpayload: request\n\t\t}\n}\n\nexport function getProductDetails(id) {\n\tconst request = axios.get(`${PRODUCT_SERVER}/article_by_id?$(id)&type=single`)\n\t\t.then(response => {\n\t\t\treturn response.data[0]\n\t\t});\n\t\treturn {\n\t\t\ttype: GET_PRODUCT_DETAILS,\n\t\t\tpayload: request\n\t\t}\n}\n\nexport function clearProductDetails () {\n\treturn {\n\t\ttype: CLEAR_PRODUCT_DETAILS,\n\t\tpayload: ''\n\t}\n}"]},"metadata":{},"sourceType":"module"}