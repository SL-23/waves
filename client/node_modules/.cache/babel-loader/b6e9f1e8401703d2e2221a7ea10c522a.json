{"ast":null,"code":"import accepts from 'attr-accept';\nexport var supportMultiple = typeof document !== 'undefined' && document && document.createElement ? 'multiple' in document.createElement('input') : true;\nexport function getDataTransferItems(event) {\n  var dataTransferItemsList = [];\n\n  if (event.dataTransfer) {\n    var dt = event.dataTransfer;\n\n    if (dt.files && dt.files.length) {\n      dataTransferItemsList = dt.files;\n    } else if (dt.items && dt.items.length) {\n      // During the drag even the dataTransfer.files is null\n      // but Chrome implements some drag store, which is accesible via dataTransfer.items\n      dataTransferItemsList = dt.items;\n    }\n  } else if (event.target && event.target.files) {\n    dataTransferItemsList = event.target.files;\n  } // Convert from DataTransferItemsList to the native Array\n\n\n  return Array.prototype.slice.call(dataTransferItemsList);\n} // Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with\n// that MIME type will always be accepted\n\nexport function fileAccepted(file, accept) {\n  return file.type === 'application/x-moz-file' || accepts(file, accept);\n}\nexport function fileMatchSize(file, maxSize, minSize) {\n  return file.size <= maxSize && file.size >= minSize;\n}\nexport function allFilesAccepted(files, accept) {\n  return files.every(function (file) {\n    return fileAccepted(file, accept);\n  });\n} // allow the entire document to be a drag target\n\nexport function onDocumentDragOver(evt) {\n  evt.preventDefault();\n}\n\nfunction isIe(userAgent) {\n  return userAgent.indexOf('MSIE') !== -1 || userAgent.indexOf('Trident/') !== -1;\n}\n\nfunction isEdge(userAgent) {\n  return userAgent.indexOf('Edge/') !== -1;\n}\n\nexport function isIeOrEdge() {\n  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.navigator.userAgent;\n  return isIe(userAgent) || isEdge(userAgent);\n}","map":{"version":3,"sources":["/Users/stephanielau/Desktop/code/projects/waves/client/node_modules/react-dropzone/dist/es/utils/index.js"],"names":["accepts","supportMultiple","document","createElement","getDataTransferItems","event","dataTransferItemsList","dataTransfer","dt","files","length","items","target","Array","prototype","slice","call","fileAccepted","file","accept","type","fileMatchSize","maxSize","minSize","size","allFilesAccepted","every","onDocumentDragOver","evt","preventDefault","isIe","userAgent","indexOf","isEdge","isIeOrEdge","arguments","undefined","window","navigator"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,aAApB;AAEA,OAAO,IAAIC,eAAe,GAAG,OAAOC,QAAP,KAAoB,WAApB,IAAmCA,QAAnC,IAA+CA,QAAQ,CAACC,aAAxD,GAAwE,cAAcD,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAtF,GAAwH,IAA9I;AAEP,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAC1C,MAAIC,qBAAqB,GAAG,EAA5B;;AACA,MAAID,KAAK,CAACE,YAAV,EAAwB;AACtB,QAAIC,EAAE,GAAGH,KAAK,CAACE,YAAf;;AACA,QAAIC,EAAE,CAACC,KAAH,IAAYD,EAAE,CAACC,KAAH,CAASC,MAAzB,EAAiC;AAC/BJ,MAAAA,qBAAqB,GAAGE,EAAE,CAACC,KAA3B;AACD,KAFD,MAEO,IAAID,EAAE,CAACG,KAAH,IAAYH,EAAE,CAACG,KAAH,CAASD,MAAzB,EAAiC;AACtC;AACA;AACAJ,MAAAA,qBAAqB,GAAGE,EAAE,CAACG,KAA3B;AACD;AACF,GATD,MASO,IAAIN,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACO,MAAN,CAAaH,KAAjC,EAAwC;AAC7CH,IAAAA,qBAAqB,GAAGD,KAAK,CAACO,MAAN,CAAaH,KAArC;AACD,GAbyC,CAc1C;;;AACA,SAAOI,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BV,qBAA3B,CAAP;AACD,C,CAED;AACA;;AACA,OAAO,SAASW,YAAT,CAAsBC,IAAtB,EAA4BC,MAA5B,EAAoC;AACzC,SAAOD,IAAI,CAACE,IAAL,KAAc,wBAAd,IAA0CpB,OAAO,CAACkB,IAAD,EAAOC,MAAP,CAAxD;AACD;AAED,OAAO,SAASE,aAAT,CAAuBH,IAAvB,EAA6BI,OAA7B,EAAsCC,OAAtC,EAA+C;AACpD,SAAOL,IAAI,CAACM,IAAL,IAAaF,OAAb,IAAwBJ,IAAI,CAACM,IAAL,IAAaD,OAA5C;AACD;AAED,OAAO,SAASE,gBAAT,CAA0BhB,KAA1B,EAAiCU,MAAjC,EAAyC;AAC9C,SAAOV,KAAK,CAACiB,KAAN,CAAY,UAAUR,IAAV,EAAgB;AACjC,WAAOD,YAAY,CAACC,IAAD,EAAOC,MAAP,CAAnB;AACD,GAFM,CAAP;AAGD,C,CAED;;AACA,OAAO,SAASQ,kBAAT,CAA4BC,GAA5B,EAAiC;AACtCA,EAAAA,GAAG,CAACC,cAAJ;AACD;;AAED,SAASC,IAAT,CAAcC,SAAd,EAAyB;AACvB,SAAOA,SAAS,CAACC,OAAV,CAAkB,MAAlB,MAA8B,CAAC,CAA/B,IAAoCD,SAAS,CAACC,OAAV,CAAkB,UAAlB,MAAkC,CAAC,CAA9E;AACD;;AAED,SAASC,MAAT,CAAgBF,SAAhB,EAA2B;AACzB,SAAOA,SAAS,CAACC,OAAV,CAAkB,OAAlB,MAA+B,CAAC,CAAvC;AACD;;AAED,OAAO,SAASE,UAAT,GAAsB;AAC3B,MAAIH,SAAS,GAAGI,SAAS,CAACzB,MAAV,GAAmB,CAAnB,IAAwByB,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoEE,MAAM,CAACC,SAAP,CAAiBP,SAArG;AAEA,SAAOD,IAAI,CAACC,SAAD,CAAJ,IAAmBE,MAAM,CAACF,SAAD,CAAhC;AACD","sourcesContent":["import accepts from 'attr-accept';\n\nexport var supportMultiple = typeof document !== 'undefined' && document && document.createElement ? 'multiple' in document.createElement('input') : true;\n\nexport function getDataTransferItems(event) {\n  var dataTransferItemsList = [];\n  if (event.dataTransfer) {\n    var dt = event.dataTransfer;\n    if (dt.files && dt.files.length) {\n      dataTransferItemsList = dt.files;\n    } else if (dt.items && dt.items.length) {\n      // During the drag even the dataTransfer.files is null\n      // but Chrome implements some drag store, which is accesible via dataTransfer.items\n      dataTransferItemsList = dt.items;\n    }\n  } else if (event.target && event.target.files) {\n    dataTransferItemsList = event.target.files;\n  }\n  // Convert from DataTransferItemsList to the native Array\n  return Array.prototype.slice.call(dataTransferItemsList);\n}\n\n// Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with\n// that MIME type will always be accepted\nexport function fileAccepted(file, accept) {\n  return file.type === 'application/x-moz-file' || accepts(file, accept);\n}\n\nexport function fileMatchSize(file, maxSize, minSize) {\n  return file.size <= maxSize && file.size >= minSize;\n}\n\nexport function allFilesAccepted(files, accept) {\n  return files.every(function (file) {\n    return fileAccepted(file, accept);\n  });\n}\n\n// allow the entire document to be a drag target\nexport function onDocumentDragOver(evt) {\n  evt.preventDefault();\n}\n\nfunction isIe(userAgent) {\n  return userAgent.indexOf('MSIE') !== -1 || userAgent.indexOf('Trident/') !== -1;\n}\n\nfunction isEdge(userAgent) {\n  return userAgent.indexOf('Edge/') !== -1;\n}\n\nexport function isIeOrEdge() {\n  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.navigator.userAgent;\n\n  return isIe(userAgent) || isEdge(userAgent);\n}"]},"metadata":{},"sourceType":"module"}