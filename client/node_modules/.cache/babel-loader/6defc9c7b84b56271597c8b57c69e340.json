{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephanielau/Desktop/code/projects/waves/client/src/Components/User/Admin/ManageBrands.js\";\nimport React, { Component } from 'react';\nimport FormField from '../../Utils/Form/FormField';\nimport { update, generateData, isFormValid, resetFields } from '../../Utils/Form/FormAction';\nimport { getBrands } from '../../../actions/products_action';\nimport { connect } from 'react-redux';\n\nclass ManageBrands extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      formSuccess: false,\n      formData: {\n        name: {\n          element: 'input',\n          value: '',\n          config: {\n            label: 'Brand name',\n            name: 'name_input',\n            type: 'text',\n            placeholder: 'Enter the brand'\n          },\n          validation: {\n            required: true,\n            email: false\n          },\n          valid: false,\n          touched: false,\n          validationMessage: '',\n          showLabel: true\n        }\n      }\n    };\n\n    this.showCategoryItems = () => this.props.products.brands ? this.props.products.brands.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category_item\",\n      children: [\" \", item.name, \" \"]\n    }, item.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)) : null;\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getBrands());\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin_category_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Brands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin_two_column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brands_container\",\n            children: this.showCategoryItems()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: \"form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nexport default connect(mapStateToProps)(ManageBrands);","map":{"version":3,"sources":["/Users/stephanielau/Desktop/code/projects/waves/client/src/Components/User/Admin/ManageBrands.js"],"names":["React","Component","FormField","update","generateData","isFormValid","resetFields","getBrands","connect","ManageBrands","state","formError","formSuccess","formData","name","element","value","config","label","type","placeholder","validation","required","email","valid","touched","validationMessage","showLabel","showCategoryItems","props","products","brands","map","item","componentDidMount","dispatch","console","log","render","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,WAA/B,EAA4CC,WAA5C,QAA+D,6BAA/D;AACA,SAASC,SAAT,QAA0B,kCAA1B;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEpCS,KAFoC,GAE5B;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,WAAW,EAAE,KAFT;AAGJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE,OADL;AAEJC,UAAAA,KAAK,EAAE,EAFH;AAGJC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAC,YADA;AAENJ,YAAAA,IAAI,EAAE,YAFA;AAGNK,YAAAA,IAAI,EAAE,MAHA;AAINC,YAAAA,WAAW,EAAE;AAJP,WAHJ;AASJC,UAAAA,UAAU,EAAE;AACVC,YAAAA,QAAQ,EAAE,IADA;AAEVC,YAAAA,KAAK,EAAE;AAFG,WATR;AAaJC,UAAAA,KAAK,EAAE,KAbH;AAcJC,UAAAA,OAAO,EAAE,KAdL;AAeJC,UAAAA,iBAAiB,EAAC,EAfd;AAgBJC,UAAAA,SAAS,EAAE;AAhBP;AADE;AAHN,KAF4B;;AAAA,SA2BlCC,iBA3BkC,GA2Bd,MACnB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,GACC,KAAKF,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2BC,GAA3B,CAAgCC,IAAD,iBAC9B;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA,sBAAiDA,IAAI,CAACnB,IAAtD;AAAA,OAAUmB,IAAI,CAACnB,IAAf;AAAA;AAAA;AAAA;AAAA,YADD,CADD,GAIE,IAhC+B;AAAA;;AAmClCoB,EAAAA,iBAAiB,GAAG;AACnB,SAAKL,KAAL,CAAWM,QAAX,CAAoB5B,SAAS,EAA7B;AACA6B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAjB;AAEA;;AACD4B,EAAAA,MAAM,GAAG;AACP,wBACG;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACC;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,sBACG,KAAKV,iBAAL;AADH;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAMC;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAgBF;;AAzDkC;;AA4DrC,MAAMW,eAAe,GAAI7B,KAAD,IAAW;AAClC,SAAO;AACNoB,IAAAA,QAAQ,EAAEpB,KAAK,CAACoB;AADV,GAAP;AAGA,CAJD;;AAMA,eAAetB,OAAO,CAAC+B,eAAD,CAAP,CAAyB9B,YAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport FormField from '../../Utils/Form/FormField';\nimport { update, generateData, isFormValid, resetFields } from '../../Utils/Form/FormAction';\nimport { getBrands } from '../../../actions/products_action';\n\nimport { connect } from 'react-redux';\n\n\nclass ManageBrands extends Component {\n\n\tstate = {\n\t    formError: false,\n\t    formSuccess: false,\n\t    formData: {\n\t      name: {\n\t        element: 'input',\n\t        value: '',\n\t        config: {\n\t          label:'Brand name',\n\t          name: 'name_input',\n\t          type: 'text',\n\t          placeholder: 'Enter the brand'\n\t        },\n\t        validation: {\n\t          required: true,\n\t          email: false\n\t        },\n\t        valid: false,\n\t        touched: false,\n\t        validationMessage:'',\n\t        showLabel: true\n\t      }\n\t  \t}\n  \t}\n\n  \tshowCategoryItems = () => (\n  \t\tthis.props.products.brands ?\n  \t\t\tthis.props.products.brands.map((item) => (\n  \t\t\t\t<div key={item.name} className='category_item'> {item.name} </div>\n  \t\t\t))\n  \t\t: null\n  \t)\n  \n  \tcomponentDidMount() {\n  \t\tthis.props.dispatch(getBrands());\n  \t\tconsole.log(this.state)\n\n  \t}\n  \trender() {\n    \treturn (\n      \t\t<div className='admin_category_wrapper'>\n      \t\t\t<h1>Brands</h1>\n      \t\t\t<div className='admin_two_column'>\n      \t\t\t\t<div className='left'>\n      \t\t\t\t\t<div className='brands_container'>\n      \t\t\t\t\t\t{ this.showCategoryItems() }\n      \t\t\t\t\t</div>\n      \t\t\t\t</div>\n      \t\t\t\t<div className='right'>\n      \t\t\t\t\tform\n      \t\t\t\t</div>\n      \t\t\t</div>\n        \t\t\n      \t\t</div>\n    \t)\n  }\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tproducts: state.products\n\t}\n}\n\nexport default connect(mapStateToProps)(ManageBrands);"]},"metadata":{},"sourceType":"module"}