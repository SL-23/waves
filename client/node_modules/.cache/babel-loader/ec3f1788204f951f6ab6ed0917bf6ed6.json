{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephanielau/Desktop/code/projects/waves/client/src/Components/Utils/Form/FileUpload.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport faPlusCircle from '@fortawesome/fontawesome-free-solid/faPlusCircle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass FileUpload extends Component {\n  constructor() {\n    super();\n\n    this.onDrop = files => {\n      this.setState({\n        uploading: true\n      });\n      let formData = new FormData();\n      const config = {\n        header: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      formData.append(\"file\", files[0]);\n      axios.post('/api/users/uploadimage', formData, config).then(response => {\n        console.log(response.data);\n        this.setState({\n          uploading: false,\n          uploadedFiles: [...this.state.uploadedFiles, response.data]\n        }, () => {\n          this.props.imagesHandler(this.state.uploadedFiles);\n        });\n      });\n    };\n\n    this.onRemove = id => {\n      axios.get(`/api/users/removeimage?public_id=${id}`).then(response => {\n        let images = this.state.uploadedFiles.filter(item => {\n          return item.public_id !== id;\n        });\n        this.setState({\n          uploadedFiles: images\n        }, () => {\n          this.props.imagesHandler(images);\n        });\n      });\n    };\n\n    this.showUploadedImages = () => this.state.uploadedFiles.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone_box\",\n      onClick: () => this.onRemove(item.public_id),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap\",\n        style: {\n          background: `url(${item.url}) no-repeat`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, item.public_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this));\n\n    this.state = {\n      uploadedFiles: [],\n      uploading: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.reset) {\n      return state = {\n        uploadedFiles: []\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropzone clear\",\n          children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n            onDrop: e => this.onDrop(e),\n            multiple: false,\n            className: \"dropzone_box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrap\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPlusCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), this.showUploadedImages(), this.state.uploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropzone_box\",\n            style: {\n              textAlign: 'center',\n              paddingTop: '60px'\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              style: {\n                color: '#00bcd4'\n              },\n              thickness: 7\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/stephanielau/Desktop/code/projects/waves/client/src/Components/Utils/Form/FileUpload.js"],"names":["React","Component","Dropzone","axios","FontAwesomeIcon","faPlusCircle","CircularProgress","FileUpload","constructor","onDrop","files","setState","uploading","formData","FormData","config","header","append","post","then","response","console","log","data","uploadedFiles","state","props","imagesHandler","onRemove","id","get","images","filter","item","public_id","showUploadedImages","map","background","url","getDerivedStateFromProps","reset","render","e","textAlign","paddingTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\n\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport faPlusCircle from '@fortawesome/fontawesome-free-solid/faPlusCircle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass FileUpload extends Component {\n    constructor(){\n        super();\n        this.state = {\n            uploadedFiles:[],\n            uploading:false\n        }\n    }\n\n    onDrop = (files) => {\n       this.setState({uploading:true});\n       let formData = new FormData();\n       const config = {\n           header: {'content-type':'multipart/form-data'}\n       }\n       formData.append(\"file\",files[0]);\n\n       axios.post('/api/users/uploadimage',formData,config)\n       .then(response => {\n\n            console.log(response.data)\n\n            this.setState({\n                uploading:false,\n                uploadedFiles:[\n                    ...this.state.uploadedFiles,\n                    response.data\n                ]\n            },()=>{\n                this.props.imagesHandler(this.state.uploadedFiles)\n            })\n       });\n    }\n\n    onRemove = (id) => {\n        axios.get(`/api/users/removeimage?public_id=${id}`).then(response=>{\n            let images = this.state.uploadedFiles.filter(item=>{\n                return item.public_id !== id;\n            });\n\n            this.setState({\n                uploadedFiles: images\n            },()=>{\n                this.props.imagesHandler(images)\n            })\n        })\n    }\n\n    showUploadedImages = () => (\n        this.state.uploadedFiles.map(item=>(\n            <div className=\"dropzone_box\"\n                key={item.public_id}\n                onClick={()=> this.onRemove(item.public_id)}\n            >\n                <div \n                    className=\"wrap\"\n                    style={{background:`url(${item.url}) no-repeat`}}\n                >\n                </div>\n            </div>\n        ))\n    )\n\n    static getDerivedStateFromProps(props,state){\n        if(props.reset){\n            return state = {\n                uploadedFiles:[]\n            }\n        }\n        return null;\n    }\n\n\n    render() {\n        return (\n            <div>\n                <section>\n                    <div className=\"dropzone clear\">\n                        <Dropzone\n                            onDrop={(e)=>this.onDrop(e)}\n                            multiple={false}\n                            className=\"dropzone_box\"\n                        >   \n                            <div className=\"wrap\">\n                                <FontAwesomeIcon\n                                    icon={faPlusCircle}\n                                />\n                            </div>\n                        </Dropzone>\n                        { this.showUploadedImages()}\n                        {\n                            this.state.uploading ?\n                            <div className=\"dropzone_box\" style={{\n                                textAlign: 'center',\n                                paddingTop: '60px'\n                            }}>\n                                <CircularProgress\n                                    style={{color:'#00bcd4'}}\n                                    thickness={7}\n                                />\n                            </div>\n                            :null\n                        }\n\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}