{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephanielau/Desktop/code/projects/waves/client/src/Components/Utils/Form/FileUpload.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport faPlusCircle from '@fortawesome/fontawesome-free-solid/faPlusCircle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass FileUpload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      uploadedFiles: [],\n      uploading: false\n    };\n\n    this.onDrop = files => {\n      console.log(files[0]);\n      this.setState({\n        uploading: true\n      });\n      let formData = new FormData();\n      const config = {\n        header: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      formData.append('file', files[0]);\n      axios.post('/api/users/uploadimage', formData, config).then(response => {\n        console.log(response.data);\n        this.setState({\n          uploading: false,\n          uploadedFiles: [...this.state.uploadedFiles, response.data]\n        }, () => {\n          this.props.imagesHandler(this.state.uploadedFiles);\n        });\n      });\n    };\n\n    this.showUploadedImages = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropzone clear\",\n          children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n            onDrop: e => this.onDrop(e),\n            multiple: false,\n            className: \"dropzone_box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrap\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPlusCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), this.showUploadedImages(), this.state.uploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropzone_box\",\n            style: {\n              textAlign: 'center',\n              paddingTop: '60px'\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              style: {\n                color: '#00bcd4'\n              },\n              thickness: 7\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 14\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/stephanielau/Desktop/code/projects/waves/client/src/Components/Utils/Form/FileUpload.js"],"names":["React","Component","Dropzone","axios","FontAwesomeIcon","faPlusCircle","CircularProgress","FileUpload","state","uploadedFiles","uploading","onDrop","files","console","log","setState","formData","FormData","config","header","append","post","then","response","data","props","imagesHandler","showUploadedImages","render","e","textAlign","paddingTop","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,YAAP,MAAyB,kDAAzB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAGA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAElCO,KAFkC,GAE1B;AACPC,MAAAA,aAAa,EAAC,EADP;AAEPC,MAAAA,SAAS,EAAE;AAFJ,KAF0B;;AAAA,SAOlCC,MAPkC,GAOxBC,KAAD,IAAW;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAAC,CAAD,CAAjB;AACA,WAAKG,QAAL,CAAc;AACbL,QAAAA,SAAS,EAAE;AADE,OAAd;AAGA,UAAIM,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACA,YAAMC,MAAM,GAAG;AACdC,QAAAA,MAAM,EAAC;AAAC,0BAAgB;AAAjB;AADO,OAAf;AAGAH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBR,KAAK,CAAC,CAAD,CAA7B;AAEAT,MAAAA,KAAK,CAACkB,IAAN,CAAW,wBAAX,EAAqCL,QAArC,EAA+CE,MAA/C,EACCI,IADD,CACMC,QAAQ,IAAI;AACjBV,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACC,IAArB;AACA,aAAKT,QAAL,CAAc;AACbL,UAAAA,SAAS,EAAE,KADE;AAEbD,UAAAA,aAAa,EAAE,CACd,GAAG,KAAKD,KAAL,CAAWC,aADA,EAEdc,QAAQ,CAACC,IAFK;AAFF,SAAd,EAMG,MAAM;AACR,eAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKlB,KAAL,CAAWC,aAApC;AACA,SARD;AASA,OAZD;AAaA,KA/BiC;;AAAA,SAiClCkB,kBAjCkC,GAiCb,MAAM,CAE1B,CAnCiC;AAAA;;AAqC/BC,EAAAA,MAAM,GAAG;AACR,wBACG;AAAA,6BACE;AAAA,+BACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACC,QAAC,QAAD;AACC,YAAA,MAAM,EAAGC,CAAD,IAAO,KAAKlB,MAAL,CAAYkB,CAAZ,CADhB;AAEC,YAAA,QAAQ,EAAE,KAFX;AAGC,YAAA,SAAS,EAAC,cAHX;AAAA,mCAKC;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,qCACC,QAAC,eAAD;AACC,gBAAA,IAAI,EAAExB;AADP;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA,kBADD,EAaG,KAAKsB,kBAAL,EAbH,EAeE,KAAKnB,KAAL,CAAWE,SAAX,gBACA;AAAK,YAAA,SAAS,EAAC,cAAf;AAA8B,YAAA,KAAK,EAAE;AACpCoB,cAAAA,SAAS,EAAE,QADyB;AAEpCC,cAAAA,UAAU,EAAE;AAFwB,aAArC;AAAA,mCAIC,QAAC,gBAAD;AACC,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAE;AAAR,eADR;AAEC,cAAA,SAAS,EAAE;AAFZ;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,kBADA,GAUE,IAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADH;AAkCD;;AAxE+B;;AA2EnC,eAAezB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport faPlusCircle from '@fortawesome/fontawesome-free-solid/faPlusCircle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nclass FileUpload extends Component {\n\n\tstate = {\n\t\tuploadedFiles:[],\n\t\tuploading: false\n\t}\n\n\tonDrop = (files) => {\n\t\tconsole.log(files[0]);\n\t\tthis.setState({\n\t\t\tuploading: true\n\t\t})\n\t\tlet formData = new FormData();\n\t\tconst config = {\n\t\t\theader:{'content-type': 'multipart/form-data'}\n\t\t}\n\t\tformData.append('file', files[0]);\n\n\t\taxios.post('/api/users/uploadimage', formData, config)\n\t\t.then(response => {\n\t\t\tconsole.log(response.data)\n\t\t\tthis.setState({\n\t\t\t\tuploading: false,\n\t\t\t\tuploadedFiles: [\n\t\t\t\t\t...this.state.uploadedFiles,\n\t\t\t\t\tresponse.data\n\t\t\t\t]\n\t\t\t}, () => {\n\t\t\t\tthis.props.imagesHandler(this.state.uploadedFiles)\n\t\t\t})\n\t\t})\n\t}\n\n\tshowUploadedImages = () => {\n\n\t}\n\n    render() {\n\t    return (\n\t      \t<div>\n\t        \t<section>\n\t        \t\t<div className='dropzone clear'>\n\t        \t\t\t<Dropzone\n\t        \t\t\t\tonDrop={(e) => this.onDrop(e)}\n\t        \t\t\t\tmultiple={false}\n\t        \t\t\t\tclassName='dropzone_box'\n\t        \t\t\t>\n\t        \t\t\t\t<div className='wrap'>\n\t        \t\t\t\t\t<FontAwesomeIcon \n\t        \t\t\t\t\t\ticon={faPlusCircle}\n\t        \t\t\t\t\t/>\n\t        \t\t\t\t</div>\n\n\t        \t\t\t</Dropzone>\n\t        \t\t\t{ this.showUploadedImages() }\n\t        \t\t\t{\n\t        \t\t\t\tthis.state.uploading ?\n\t        \t\t\t\t<div className='dropzone_box' style={{\n\t        \t\t\t\t\ttextAlign: 'center',\n\t        \t\t\t\t\tpaddingTop: '60px'\n\t        \t\t\t\t}}> \n\t        \t\t\t\t\t<CircularProgress \n\t        \t\t\t\t\t\tstyle={{color: '#00bcd4'}}\n\t        \t\t\t\t\t\tthickness={7}\n\t        \t\t\t\t\t/>\n\t        \t\t\t\t</div>\n\t        \t\t\t\t: null\n\t        \t\t\t}\n\t        \t\t</div>\n\t        \t</section>\n\t      \t</div>\n\t    )\n  \t}\n}\n\nexport default FileUpload"]},"metadata":{},"sourceType":"module"}